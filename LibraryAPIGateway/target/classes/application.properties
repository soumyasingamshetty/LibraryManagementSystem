
server.port = 8989

# Add configuration to make that service as Eureka Client
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true
eureka.client.service-url.defaultZone=http://localhost:8761/eureka/
eureka.instance.hostname=localhost

# this name will be displayed in eureka server as your client name
spring.application.name=LIBRARYAPIGATEWAY-SERVICE


#configuring multiple microservices in api gateway
#Microservice 1
spring.cloud.gateway.routes[0].id=book-service
spring.cloud.gateway.routes[0].uri=lb://BOOK-SERVICE
spring.cloud.gateway.routes[0].predicates[0].name=Path
spring.cloud.gateway.routes[0].predicates[0].args[pattern]=/bookService/**
#Microservice 2
spring.cloud.gateway.routes[1].id=borrow-service
spring.cloud.gateway.routes[1].uri=lb://BORROW-SERVICE
spring.cloud.gateway.routes[1].predicates[0].name=Path
spring.cloud.gateway.routes[1].predicates[0].args[pattern]=/borrowService/**
#MicroService 3
spring.cloud.gateway.routes[2].id=login-service
spring.cloud.gateway.routes[2].uri=lb://LOGIN-SERVICE
spring.cloud.gateway.routes[2].predicates[0].name=Path
spring.cloud.gateway.routes[2].predicates[0].args[pattern]=/loginService/**
#MicroService 4
spring.cloud.gateway.routes[3].id=register-service
spring.cloud.gateway.routes[3].uri=lb://REGISTER-SERVICE
spring.cloud.gateway.routes[3].predicates[0].name=Path
spring.cloud.gateway.routes[3].predicates[0].args[pattern]=/registerService/**
#MicroService 5
spring.cloud.gateway.routes[4].id=user-service
spring.cloud.gateway.routes[4].uri=lb://USER-SERVICE
spring.cloud.gateway.routes[4].predicates[0].name=Path
spring.cloud.gateway.routes[4].predicates[0].args[pattern]=/userService/**

 spring.mvc.view.prefix: /WEB-INF/jsp/
 spring.mvc.view.suffix: .jsp
